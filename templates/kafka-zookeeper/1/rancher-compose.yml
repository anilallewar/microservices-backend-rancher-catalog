.catalog:
  name: Cluster-Backend-Kafka-Zookeeper
  version: 0.0.2
  description: Kafka and Zookeeper that provide the distributed queue and object store for the booking functionality
  uuid: cluster_kafka_zookeeper_0.0.2
  minimum_rancher_version: 1.6.10 # The minimum version of Rancher that supports the template
  questions: #Used to request user input for configuration options
    - variable: "ZK_TICK_TIME"
      description: "The basic time unit in milliseconds used by ZooKeeper"
      label: "Zookeeper Tick Time:"
      required: true
      default: 2000
      type: "int"
    - variable: "ZK_INIT_LIMIT"
      description: "Timeouts ZooKeeper uses to limit the length of time the ZooKeeper servers in quorum have to connect to a leader; value is init_limit * tick_time"
      label: "Zookeeper Init Limit:"
      required: true
      default: 30
      type: "int"
    - variable: "ZK_SYNC_LIMIT"
      description: "Limits how far out of date a server can be from a leader; value is sync_limit * tick_time"
      label: "Zookeeper Sync Limit:"
      required: true
      default: 15
      type: "int"
    - variable: "ZK_MAX_CLIENT_CXNS"
      description: "Limits the number of concurrent connections (at the socket level) that a single client, identified by IP address, may make to a single member of the ZooKeeper ensemble"
      label: "Zookeeper Max Client Connections:"
      required: true
      default: 5000
      type: "int"
    - variable: "ZK_SERVER_1"
      description: "The first container IP where ZooKeeper would be deployed"
      label: "Zookeeper server One:"
      required: true
      default: "10.42.0.1"
      type: "string"
    - variable: "ZK_SERVER_2"
      description: "The second container IP where ZooKeeper would be deployed"
      label: "Zookeeper server Two:"
      required: true
      default: "10.42.0.2"
      type: "string"
    - variable: "ZK_SERVER_3"
      description: "The third container IP where ZooKeeper would be deployed"
      label: "Zookeeper server Three:"
      required: true
      default: "10.42.0.3"
      type: "string"
    - variable: "KAFKA_SERVER_1"
      description: "The first container IP where Kafka would be deployed"
      label: "Kafka server One:"
      required: true
      default: "10.42.1.1"
      type: "string"
    - variable: "KAFKA_SERVER_2"
      description: "The second container IP where Kafka would be deployed"
      label: "Kafka server Two:"
      required: true
      default: "10.42.1.2"
      type: "string"
    - variable: "KAFKA_SERVER_3"
      description: "The third container IP where Kafka would be deployed"
      label: "Kafka server Three:"
      required: true
      default: "10.42.1.3"
      type: "string"
    - variable: "ZOOKEEPER_DATA_DIRECTORY"
      description: "The directory on the host where you want to store the zookeeper data"
      label: "Zookeeper Host Data Directory:"
      required: true
      default: '/home/ubuntu/zookeeper/data'
      type: "string"
    - variable: "ZOOKEEPER_LOG_DIRECTORY"
      description: "The directory on the host where you want to store the zookeeper logs"
      label: "Zookeeper Log Directory:"
      required: true
      default: '/home/ubuntu/zookeeper/log'
      type: "string"
    - variable: "KAFKA_DEFAULT_REPLICATION_FACTOR"
      description: "Default replication factor for automatically created topics"
      label: "Kafka Default Topic Replication Factor:"
      required: true
      default: 3
      type: "int"
    - variable: "KAFKA_NUM_PARTITIONS"
      description: "Default number of partitions for the topic."
      label: "Kafka Default # of Partitions:"
      required: true
      default: 10
      type: "int"
    - variable: "KAFKA_LOG_RETENTION_HOURS"
      description: "Number of hours for which logs will be retained on the Kafka server"
      label: "Kafka Log Retention Hours:"
      required: true
      default: 72
      type: "int"
    - variable: "KAFKA_DATA_DIRECTORY"
      description: "The directory on the host where you want to store the kafka partition data"
      label: "Kafka Host Data Directory:"
      required: true
      default: '/home/ubuntu/kafka/data'
      type: "string"
    - variable: "KAFKA_NUM_INSYNC_REPLICAS"
      description: "Minimum number of replicas that must acknowledge a write for the write to be considered successful"
      label: "Minumum number of in-sync replicas:"
      required: true
      default: 2
      type: "int"
zookeeper-1:
  scale: 1
  retain_ip: true
  health_check:
      # Which port to perform the check against
      port: 2181
      # Interval between health checks - all time units in milliseconds
      interval: 10000
      # Timeout when the container is in the initializing state - set to 5 minutes
      initializing_timeout: 300000
      # Timeout when the container is in the re-initializing state if it was killed
      # - set to 5 minutes
      reinitializing_timeout: 300000
      # The number of successful check responses before a (currently marked unhealthy)
      # container is considered healthy again.
      unhealthy_threshold: 3
      # Strategy for what to do when unhealthy
      # In this service, Rancher will recreate any unhealthy containers
      strategy: recreate
      # The number of failed check responses before a (currently marked healthy)
      # container is considered unhealthy.
      healthy_threshold: 2
      # The number of milliseconds before a check without response times out.
      response_timeout: 20000
zookeeper-2:
  scale: 1
  retain_ip: true
  health_check:
      port: 2181
      interval: 10000
      initializing_timeout: 300000
      reinitializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 20000
zookeeper-3:
  scale: 1
  retain_ip: true
  health_check:
      port: 2181
      interval: 10000
      initializing_timeout: 300000
      reinitializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 20000
kafka-1:
  scale: 1
  retain_ip: true
  health_check:
      port: 9092
      interval: 10000
      initializing_timeout: 300000
      reinitializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 20000
kafka-2:
  scale: 1
  retain_ip: true
  health_check:
      port: 9092
      interval: 10000
      initializing_timeout: 300000
      reinitializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 20000
kafka-3:
  scale: 1
  retain_ip: true
  health_check:
      port: 9092
      interval: 10000
      initializing_timeout: 300000
      reinitializing_timeout: 300000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 20000
